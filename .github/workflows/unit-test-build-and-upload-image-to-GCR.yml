name: Unit test, build image and upload image to GITHUB Container Registry

on:
  push:
    branches: ['dev']
    # 使用 paths 過濾了 'src/**'，這表示僅當在 src/ 目錄下有更改時才觸發 Workflow。
    # paths: 
    #   - 'src/**'
  pull_request:
    branches: ['main','stage']

env:
  # Use docker.io for Docker Hub if empty
  REGISTRY: ghcr.io
  # see: https://docs.github.com/en/actions/learn-github-actions/contexts#github-context
  # github.repository as <account>/<repo>
  IMAGE_NAME: ${{ github.repository }}

jobs:
  unit-test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [19.x]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Install dependencies
        run: npm ci # ci 的主要目的是在持續集成（CI）或自動化部署的環境中，以一個乾淨且可重複的方式進行套件安裝。npm ci 會針對 package-lock.json 來還原套件。

      - name: Test code
        run: npm run test

  build-and-push-image:
    needs: unit-test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@98669ae865ea3cffbcbaa878cf57c20bbf1c6c38
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      # see: https://github.com/orgs/community/discussions/27086
      # see: https://github.com/orgs/community/discussions/25768
      - name: downcase REPO name
        run: |
          echo "REPO=${GITHUB_REPOSITORY,,}" >>${GITHUB_ENV}

      # see: https://stackoverflow.com/questions/59810838/how-to-get-the-short-sha-for-the-github-workflow
      # see: https://stackoverflow.com/questions/18134627/how-much-of-a-git-sha-is-generally-considered-necessary-to-uniquely-identify-a
      - name: Set short sha outputs
        id: vars
        run: echo "sha_short=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT

      - name: Check short sha outputs
        run: echo ${{ steps.vars.outputs.sha_short }}

      # tags pattern should be <registry>/<account>/<repo>:<tag>
      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: ${{ env.REGISTRY }}/${{ env.REPO }}:${{ steps.vars.outputs.sha_short }}
          labels: ${{ steps.meta.outputs.labels }}